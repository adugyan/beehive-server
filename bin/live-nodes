#!/bin/python

import requests
import subprocess
import json


############################
##### Helper Functions #####
############################

# Run a command and capture it's output
def run_command(command):
  p = subprocess.Popen(command, stdout=subprocess.PIPE,
                                stderr=subprocess.PIPE)
  return [line.rstrip() for line in iter(p.stdout.readline, b'')]


############################
###### Main  Function ######
############################

entries = run_command("/usr/lib/waggle/beehive-server/bin/get-node-entries")
ports_dict = {}
field_names = ("id", "node_id", "project", "description", "reverse_ssh_port", "hostname", "hardware", "name", "location",
              "last_updated", "opmode")
for entry in entries:
  field_values = entry.split(";")
  fields_dict = {}
  for index,field_name in enumerate(field_names):
    fields_dict[field_name] = field_values[index]
  ports_dict[int(field_values[4])] = fields_dict
ports = sorted(ports_dict)

print("Name  Port       Node ID                Description                      Location")
print("----  -----  ----------------  ------------------------------  ------------------------------")

### get live ports ###
live_ports = sorted([int(port) for port in run_command(["/usr/lib/waggle/beehive-server/bin/live-ports"])])
for port in live_ports:
  try:
    node_id = ports_dict[port]['node_id']
    name = ports_dict[port][u'name']
    name_space_count = 0
    if name != None:
      name_space_count = 4 - len(name)
    description = ports_dict[port][u'description']
    desc_space_count = 26
    if description != None:
      desc_space_count = 30 - len(description)
    location = ports_dict[port][u'location']
    print("%s%s  %d  %s  %s%s  %s" % (name, ' '*name_space_count, port, node_id, description, ' '*desc_space_count, location))
  except:
    print("%s  %d  %s  %s%s  %s" % ("????", port, "???             ", "???", ' '*30, "???"))
