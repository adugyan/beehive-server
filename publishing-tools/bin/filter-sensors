#!/usr/bin/env python3
import argparse
import publishing
import sys


def invert(f):
    return lambda x: not f(x)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='''
    Filters sensor stream to only include sensors in config with values passing sanity checks.
    ''')
    parser.add_argument('-v', action='store_true', help='invert')
    parser.add_argument('metadata', help='path to sensor metadata')
    args = parser.parse_args()

    config = publishing.load_sensor_metadata(args.metadata)

    def isvalid(line):
        fields = line.split(';')
        sensor = fields[4]
        param = fields[5]

        try:
            value = float(fields[6])
        except ValueError:
            return False

        name = '.'.join([sensor, param])

        if name not in config:
            return False

        params = config[name]
        return value in params['range']

    if args.v:
        isvalid = invert(isvalid)

    for line in filter(isvalid, sys.stdin.readlines()):
        sys.stdout.write(line)
