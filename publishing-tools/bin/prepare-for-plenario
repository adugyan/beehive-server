#!/usr/bin/env python3
# ANL:waggle-license
#  This file is part of the Waggle Platform.  Please see the file
#  LICENSE.waggle.txt for the legal details of the copyright and software
#  license.  For more details on the Waggle project, visit:
#           http://www.wa8.gl
# ANL:waggle-license
import publishing
import argparse
import json
import sys
from datetime import datetime
from itertools import groupby


def itersamples(seq):
    for line in seq:
        fields = line.split(';')

        node_id = fields[0]

        timestamp = datetime.strptime(fields[1], '%Y/%m/%d %H:%M:%S')

        try:
            value = float(fields[6])
        except ValueError:
            continue

        sensor = fields[4]
        parameter = fields[5]

        yield node_id, timestamp, sensor, parameter, value


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('metapath', help='path for project metadata files')
    args = parser.parse_args()

    nodes = publishing.load_project_metadata(args.metapath)
    nodes_by_id = {node['node_id']: node for node in nodes}

    results = []

    samples = itersamples(sorted(sys.stdin.readlines()))

    for (node_id, timestamp), groupsamples in groupby(samples, key=lambda s: (s[0], s[1])):
        observations = {}

        if node_id not in nodes_by_id:
            continue

        node = nodes_by_id[node_id]

        if not node.get('lat') or not node.get('lon'):
            continue

        for sensor, sensorsamples in groupby(groupsamples, key=lambda s: s[2]):
            observation = {}

            for s in sensorsamples:
                observation[s[3]] = s[4]

            observations[sensor] = observation

        results.append({
            'node_id': node['vsn'],
            'timestamp': timestamp.strftime('%Y-%m-%d %H:%M:%S'),
            'latitude': node['lat'],
            'longitude': node['lon'],
            'human_address': node['address'],
            'observations': observations,
        })

print(json.dumps(results, indent=True))
