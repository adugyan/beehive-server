#!/usr/bin/env python3
import argparse
import json
import sys
from datetime import datetime
from itertools import groupby


def read_metadata(filename):
    with open(filename) as f:
        return json.load(f)


def itersamples(seq):
    for line in seq:
        fields = line.split(';')

        node_id = fields[0]

        timestamp = datetime.strptime(fields[1], '%Y/%m/%d %H:%M:%S')

        try:
            value = float(fields[6])
        except ValueError:
            continue

        sensor = fields[4]
        parameter = fields[5]

        yield node_id, timestamp, sensor, parameter, value


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('meta', help='metadata config file for view')
    args = parser.parse_args()

    nodes = read_metadata(args.meta)
    nodes_by_id = {node['node_id']: node for node in nodes}

    samples = itersamples(sorted(sys.stdin.readlines()))

    for (node_id, timestamp), groupsamples in groupby(samples, key=lambda s: (s[0], s[1])):
        observations = []

        if node_id not in nodes_by_id:
            continue

        node = nodes_by_id[node_id]

        if 'coords' not in node:
            continue

        for sensor, sensorsamples in groupby(groupsamples, key=lambda s: s[2]):
            observation = {}

            observation['sensor_id'] = sensor

            for s in sensorsamples:
                observation[s[3]] = s[4]

            observations.append(observation)

        output = {
            'node_id': node_id,
            'timstamp': timestamp.strftime('%Y-%m-%d %H:%M:%S'),
            'latitude': node['coords']['lat'],
            'longitude': node['coords']['lon'],
            'human_address': node['address'],
            'observations': observations,
        }

        print(json.dumps(output))
