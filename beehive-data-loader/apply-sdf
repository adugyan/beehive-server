#!/usr/bin/env python3
import argparse
import csv
import sys


def load_sdf_file(path):
    results = []

    with open(path) as file:
        reader = csv.DictReader(file)

        for row in reader:
            results.append({
                'sensor_id': int(row['sensor_id'], 16),
                'sensor_name': row['sensor_name'].strip(),
                'parameter_id': int(row['parameter_id'], 16),
                'parameter_name': row['parameter_name'].strip(),
            })

    return results


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('sdf')
    args = parser.parse_args()

    sdf = load_sdf_file(args.sdf)
    id_to_name = {}

    for r in sdf:
        id_to_name[(r['sensor_id'], r['parameter_id'])] = (r['sensor_name'], r['parameter_name'])

    reader = csv.reader(sys.stdin)
    writer = csv.writer(sys.stdout)

    for row in reader:
        timestamp = row[0]
        node_id = row[1]
        sub_id = row[2]
        sensor_id = int(row[3])
        parameter_id = int(row[4])
        value = row[5]

        try:
            sensor_name, parameter_name = id_to_name[(sensor_id, parameter_id)]
        except KeyError:
            sensor_name, parameter_name = sensor_id, parameter_id

        writer.writerow([
            timestamp,
            node_id,
            sub_id,
            sensor_name,
            parameter_name,
            value
        ])


if __name__ == '__main__':
    main()
