#!/usr/bin/env python3
import argparse
from glob import glob
import os
from jinja2 import Template
from datetime import datetime
import json
from pprint import pprint


def load_json_file(path):
    with open(path) as file:
        return json.load(file)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('nodes_file')
    parser.add_argument('datasets_dir')
    parser.add_argument('build_dir')
    args = parser.parse_args()

    datasets_dir = os.path.abspath(args.datasets_dir)
    build_dir = os.path.abspath(args.build_dir)

    nodes = []

    for item in load_json_file(args.nodes_file):
        nodes.append({
            'id': item['node_id'][-12:].lower(),
            'name': item.get('name') or '',
            'description': item.get('description') or '',
            'location': item.get('location') or '',
            'url': '{}.json'.format(item['node_id'][-12:]),
        })

    os.makedirs(build_dir, exist_ok=True)

    # with open(os.path.join(build_dir, 'index.json'), 'w') as f:
    #     json.dump(nodes, f)

    today = datetime.now().strftime('%Y-%m-%d')

    for node in nodes:
        try:
            datasets = []

            for filename in glob(os.path.join(datasets_dir, '{}/*.csv.gz'.format(node['id']))):
                if 'recent' in filename:
                    continue

                date = filename.split('/')[-1].split('.')[0]

                # exceptional
                if date <= today:
                    datasets.append({
                        'url': os.path.relpath(filename, build_dir),
                        'date': date,
                        'version': '2',
                    })

            node['datasets'] = sorted(datasets, key=lambda r: (r['version'], r['date']))

            if node['datasets']:
                node['latest'] = max([dataset['date'] for dataset in node['datasets']])

        except FileNotFoundError:
            continue

    index_template = Template(open('templates/index.html').read())
    node_template = Template(open('templates/node.html').read())

    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    with open(os.path.join(build_dir, 'index.html'), 'w') as f:
        f.write(index_template.render(nodes=nodes, timestamp=timestamp))

    for node in nodes:
        # with open(os.path.join(build_dir, '{}.json'.format(node['id'])), 'w') as f:
        #     json.dump(node['datasets'], f)

        with open(os.path.join(build_dir, '{}.html'.format(node['id'])), 'w') as f:
            f.write(node_template.render(node=node))
